using MySql.Data.MySqlClient;
using System;
using System.Windows.Forms;

namespace Сoursework
{
    public partial class How_Awarding_Club : Form // Окно Узнать награды клуба
    {
        public How_Awarding_Club()
        {
            InitializeComponent(); // Запуск окна
        }

        private void How_Awarding_Club_FormClosed(object sender, FormClosedEventArgs e) // При закрытии окна, закрывать приложение
        {
            Application.Exit(); // Закрыть приложение
        }

        private void Back_Click(object sender, EventArgs e) // Переход в меню
        {
            this.Hide(); // Спрятать окно
            Menu next = new Menu(); // Создать окно меню
            next.Show(); // Переход в окно меню
        }

        private void How_Awarding_Club_Load(object sender, EventArgs e) // Загрузка таблиц и данных в поля 
        {
            Data_Tables data_Tables = new Data_Tables(); // Создает путь к базе данных
            // Команда для базы данных
            MySqlCommand command = new MySqlCommand("SELECT * FROM `Club` ", data_Tables.GetConnection());
            try  // Ловит ошибку с отсутвием подключением к базе данных
            {
                data_Tables.OpenConnection(); // Открыть соединение с БД

                MySqlDataReader reader = command.ExecuteReader(); // Прочитать из БД информации из команды

                while (reader.Read()) // Чтение полученной информации
                    Club.Items.Add(reader.GetString("Club")); // Запись в поле "Клуб" названия клуба

                data_Tables.CloseConnection(); // Закрыть соединение с БД
            }
            catch // Поймал ошибку подключения к БД
            {
                MessageBox.Show("Отсутствует подключение к базе данных"); // Отсутствует подключение к базе данных
            }
            var column1 = new DataGridViewColumn(); // Создать колонку
            column1.HeaderText = "Клуб"; // Заголовок колонки
            column1.Width = 150; // Ширина колонки
            column1.Name = "Клуб"; // Имя колонки
            column1.Frozen = true; // Нельзя двигать колонку
            column1.CellTemplate = new DataGridViewTextBoxCell(); // Шаблон DataGridViewTextBoxCell

            var column2 = new DataGridViewColumn(); // Создать колонку
            column2.HeaderText = "Золото"; // Заголовок колонки
            column2.Width = 60; // Ширина колонки
            column2.Name = "Золото"; // Имя колонки
            column2.Frozen = true; // Нельзя двигать колонку
            column2.CellTemplate = new DataGridViewTextBoxCell(); // Шаблон DataGridViewTextBoxCell

            var column3 = new DataGridViewColumn(); // Создать колонку
            column3.HeaderText = "Серебро"; // Заголовок колонки
            column3.Width = 60; // Ширина колонки
            column3.Name = "Серебро"; // Имя колонки
            column3.Frozen = true; // Нельзя двигать колонку
            column3.CellTemplate = new DataGridViewTextBoxCell(); // Шаблон DataGridViewTextBoxCell

            var column4 = new DataGridViewColumn(); // Создать колонку
            column4.HeaderText = "Бронза"; // Заголовок колонки
            column4.Width = 60; // Ширина колонки
            column4.Name = "Бронза"; // Имя колонки
            column4.Frozen = true; // Нельзя двигать колонку
            column4.CellTemplate = new DataGridViewTextBoxCell(); // Шаблон DataGridViewTextBoxCell

            var column5 = new DataGridViewColumn(); // Создать колонку
            column5.HeaderText = "Ничего"; // Заголовок колонки
            column5.Width = 60; // Ширина колонки
            column5.Name = "Ничего"; // Имя колонки
            column5.Frozen = true; // Нельзя двигать колонку
            column5.CellTemplate = new DataGridViewTextBoxCell(); // Шаблон DataGridViewTextBoxCell

            Club_Awarding.Columns.Add(column1); // Добавить колонку в Club_Awarding
            Club_Awarding.Columns.Add(column2); // Добавить колонку в Club_Awarding
            Club_Awarding.Columns.Add(column3); // Добавить колонку в Club_Awarding
            Club_Awarding.Columns.Add(column4); // Добавить колонку в Club_Awarding
            Club_Awarding.Columns.Add(column5); // Добавить колонку в Club_Awarding
            Club_Awarding.AllowUserToAddRows = false; // Нельзя добавлять строки
            Club_Awarding.ReadOnly = true; // Только чтение
        }

        private void Know_awarding_club_Click(object sender, EventArgs e) // Нажать на кнопку
        {
            if (Club.Text == "") // Поле Клуба пусто?
            { // Да
                MessageBox.Show("Выберите клуб"); // Выберите клуб
                return; // Отмена нажатия
            } // Нет
            Club_Awarding.Rows.Clear(); // Очистить колонки

            Data_Tables data_Tables = new Data_Tables(); // Создает путь к базе данных
            int Gold = 0, Silver = 0, Bronze = 0, Empty = 0; // Переменные о количествах медалей
            // Команда для базы данных
            MySqlCommand command = new MySqlCommand("SELECT * FROM `Participant` ", data_Tables.GetConnection());
            try // Ловит ошибку с отсутвием подключением к базе данных
            {
                data_Tables.OpenConnection(); // Открыть соединение с БД
                MySqlDataReader reader = command.ExecuteReader(); // Прочитать из БД информации из команды
                while (reader.Read()) // Чтение полученной информации
                {
                    if (Club.Text != reader.GetString("Club")) // Клуб неравен "Клуб" из БД?
                                                               // Да
                        continue; // Дальше
                                  // Нет
                    switch (Convert.ToString(reader.GetString("Medal"))) // Распределение по медалям
                    {
                        case "Золото": Gold++; break; // Прибавление золотых медалей
                        case "Серебро": Silver++; break; // Прибавление серебряных медалей
                        case "Бронза": Bronze++; break; // Прибавление бронзовых деталей
                        default: Empty++; break; // Прибавдение не получивших медалей
                    }
                }
                Club_Awarding.Rows.Add(Club.Text, Gold, Silver, Bronze, Empty); // Добавить количество каждой медали в таблицу
                data_Tables.CloseConnection(); // Закрыть соединение с БД
            }
            catch // Поймал ошибку подключения к БД
            {
                MessageBox.Show("Отсутствует подключение к базе данных"); // Отсутствует подключение к базе данных
            }
        }

        private void Club_KeyPress(object sender, KeyPressEventArgs e) // Запритить ввод всего
        {
            e.Handled = true; // Запрет ввода
        }
    }
}
